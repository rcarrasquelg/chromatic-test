
Chromatic CLI v9.0.0
https://www.chromatic.com/docs/cli

Authenticating with Chromatic
    → Connecting to https://index.chromatic.com
Authenticated with Chromatic
    → Using project token '****************6059'
Retrieving git information
✖ Found only one commit
This typically means you have ran into one of the following scenarios:
- You've checked out a shallow copy of the Git repository, which some CI systems do by default.
  In order for Chromatic to correctly determine baseline commits, we need access to the full Git history graph.
  Refer to your CI provider's documentation for details.
- You've only made a single commit so far.  
  Please make at least one additional commit in order for Chromatic to be able to detect what's changed.
Failed to retrieve slug {"shortMessage":"Command failed with exit code 1: git config --get remote.origin.url","command":"git config --get remote.origin.url","escapedCommand":"git config --get remote.origin.url","exitCode":1,"stdout":"","stderr":"","cwd":"/Users/robertocarrasquel/Desktop/NEXTJS/making/making-test","all":"","failed":true,"timedOut":false,"isCanceled":false,"killed":false}
Retrieved git information
    → Commit '0fafdc0' on branch 'main'; no ancestor found
Collecting Storybook metadata
Collected Storybook metadata
    → Storybook 7.5.3 for React; using the @storybook/nextjs builder (7.5.3); supported addons found: Links, Essentials, Interactions
Initializing build
Initialized build
    → Build 2 initialized
Building your Storybook
    → Running command: npm run build-storybook -- --output-dir /var/folders/gw/8n5qkk8544707rqkzpspq3pc0000gn/T/chromatic--40595-LR4zmihySQc8
The CLI tried to run your build-storybook script, but the command failed. This indicates a problem with your Storybook. Here's what to do:

- Check the Storybook build log printed below.
- Run npm run build-storybook or yarn build-storybook yourself and make sure it outputs a valid Storybook by opening the generated index.html in your browser.
- Review the build-storybook CLI options at https://storybook.js.org/docs/configurations/cli-options/#for-build-storybook

Command failed with exit code 1: npm run build-storybook -- --output-dir /var/folders/gw/8n5qkk8544707rqkzpspq3pc0000gn/T/chromatic--40595-LR4zmihySQc8

ℹ Build command:
npm run build-storybook -- --output-dir /var/folders/gw/8n5qkk8544707rqkzpspq3pc0000gn/T/chromatic--40595-LR4zmihySQc8

ℹ Runtime metadata:
{
  "nodePlatform": "darwin",
  "nodeVersion": "18.0.0",
  "packageManager": "npm",
  "packageManagerVersion": "8.6.0"
}

ℹ Storybook build output:
/Users/robertocarrasquel/Desktop/NEXTJS/making/making-test/build-storybook.log

> making-test@0.1.0 build-storybook
> storybook build "--output-dir" "/var/folders/gw/8n5qkk8544707rqkzpspq3pc0000gn/T/chromatic--40595-LR4zmihySQc8"
@storybook/cli v7.5.3
info => Cleaning outputDir: /var/folders/gw/8n5qkk8544707rqkzpspq3pc0000gn/T/chromatic--40595-LR4zmihySQc8
(node:40643) ExperimentalWarning: The Fetch API is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
Error: 
You installed esbuild for another platform than the one you're currently using.
This won't work because esbuild is written with native code and needs to
install a platform-specific binary executable.
Specifically the "@esbuild/darwin-x64" package is present but this platform
needs the "@esbuild/darwin-arm64" package instead. People often get into this
situation by installing esbuild with npm running inside of Rosetta 2 and then
trying to use it with node running outside of Rosetta 2, or vice versa (Rosetta
2 is Apple's on-the-fly x86_64-to-arm64 translation service).
If you are installing with npm, you can try ensuring that both npm and node are
not running under Rosetta 2 and then reinstalling esbuild. This likely involves
changing how you installed npm and/or node. For example, installing node with
the universal installer here should work: https://nodejs.org/en/download/. Or
you could consider using yarn instead of npm which has built-in support for
installing a package on multiple platforms simultaneously.
If you are installing with yarn, you can try listing both "arm64" and "x64"
in your ".yarnrc.yml" file using the "supportedArchitectures" feature:
https://yarnpkg.com/configuration/yarnrc/#supportedArchitectures
Keep in mind that this means multiple copies of esbuild will be present.
Another alternative is to use the "esbuild-wasm" package instead, which works
the same way on all platforms. But it comes with a heavy performance cost and
can sometimes be 10x slower than the "esbuild" package, so you may also not
want to do that.
    at generateBinPath (./node_modules/esbuild/lib/main.js:1888:17)
    at esbuildCommandAndArgs (./node_modules/esbuild/lib/main.js:1969:33)
    at ensureServiceIsRunning (./node_modules/esbuild/lib/main.js:2133:25)
    at startSyncServiceWorker (./node_modules/esbuild/lib/main.js:2336:19)
    at Object.<anonymous> (./node_modules/esbuild/lib/main.js:2377:3)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Module._load (node:internal/modules/cjs/loader:827:12)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:77:12)
